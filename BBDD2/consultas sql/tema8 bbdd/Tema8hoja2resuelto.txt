55)	Selecciona los datos de los productos de los que haya como mucho 10 unidades en stock pero con el precio redondeado a un decimal.
55.
select numero_producto, nombre, round(precio_venta,1),stock,id_categoria from productos where stock<10;

56)	Crea una consulta que muestre las dos soluciones de la siguiente ecuación de segundo grado 3X2+2x-5=0. Recordar que las soluciones de una ecuación de segundo grado son
56.
select round((-2-(sqrt(2*2-(4*3*-5))))/(2*3),2) from dual;

select round((-2+(sqrt(2*2-(4*3*-5))))/(2*3),2) from dual;

57)	Crea una consulta que calcule la raíz cuadrada de 49 y le sume el valor absoluto de (-5).
57.
select sqrt(49)+abs(-5) from dual;

58)	Muestra el precio de venta medio de todos los productos.
58.
select avg(precio_venta) as "promedio" from productos;

59)	Muestra el nombre y apellidos, ordenados alfabéticamente, de los empleados que han vendido productos cuyo precio sea mayor que el precio medio de todos los productos.
Deben mostrarse los datos completamente en mayúsculas.

59. 
select nombre, apellidos from empleados where id_empleado 
in (select id_empleado from pedidos 
where numero_pedido in (select numero_pedido 
from detalles_pedidos where numero_producto in 
(select numero_producto from productos where precio_venta >
(select avg(precio_venta) from productos))));

60)	Calcula el número de productos que hay en la categoría 3.
60.
select count(*) from productos where id_categoria=3;

61)	Muestra el precio de venta mayor y el precio de venta menor de los productos.
61.
select max(precio_venta),min(precio_venta) from productos;

62)	Muestra los datos del producto o productos que tienen el precio más alto.
62.
select * from productos where precio_venta = (select max(precio_venta) from productos);

63)	Muestra los productos que pertenezcan a categorías en las que la longitud de su columna descripción sea mayor de 8.
63.
select * from productos where id_categoria in (select id_categoria from categorias where length(descripcion)>8);

64)	Muestra los nombres de los empleados con longitud máxima 10 y rellena los que sean menor que 10 con * por la derecha hasta que tengan longitud 10.
64.
select RPAD(nombre, 10,'*' )
from empleados where length(nombre)<=10;

65)	Actualiza los datos de la tabla PRODUCTOS de manera que en la columna descripción de los productos que pertenecen a la categoría 1 ponga 'Es un accesorio'.
Actualiza los datos de la tabla PRODUCTOS de manera que en la columna descripción de los productos que pertenecen a la categoría 2 ponga 'Es una bicicleta'.
Muestra ahora el nombre, descripción y el precio de venta de todos los productos, en caso de que la descripción tenga valor nulo debe aparecer el texto 'PRODUCTO SIN DESCRIPCIÓN'.

65.
UPDATE productos
SET Descripcion = 'Es un accesorio'
WHERE id_categoria= 1;

UPDATE productos
SET Descripcion = 'Es una bicicleta'
WHERE id_categoria= 2;

Select nombre, NVL(descripcion, 'PRODUCTO SIN DESCRIPCION') from productos;

66)	Calcula el número de productos que no tienen descripción (valor nulo en esa columna).
66.
select count(*) from productos where descripcion is null;

67)	Para cada pedido muestra el código del pedido, el identificador del cliente, el nombre del cliente y el mes en que fue realizado el pedido (solo el mes).
67.
select numero_pedido, clientes.id_cliente, clientes.nombre, extract(month from fecha_pedido) as "MES" from pedidos, clientes where pedidos.id_cliente = (select id_cliente from clientes); ////arreglar

select numero_pedido, clientes.id_cliente, clientes.nombre, extract(month from fecha_pedido) as "MES" 
from pedidos join clientes on pedidos.id_cliente = clientes.id_cliente where pedidos.id_cliente in 
(select id_cliente from clientes);//ARREGLADO

68)	Ahora muestra las mismas columnas que en la consulta anterior, pero la fecha de pedido debe aparecer en el siguiente formato (‘dd-mm-yyyy’). Hay que utilizar la función TO_CHAR.
68.
select numero_pedido, clientes.id_cliente, clientes.nombre, to_char(fecha_pedido, 'dd-mm-yyyy') as "MES" 
from pedidos join clientes on pedidos.id_cliente = clientes.id_cliente where pedidos.id_cliente in 
(select id_cliente from clientes);

69)	Obtener qué fecha será el próximo miércoles.
69.
select NEXT_DAY(sysdate,3) as "PROXIMO MIERCOLES"
FROM DUAL;

70)	Obtener los nombres de los productos ordenados por el número de caracteres que tienen.
70.
select nombre from productos order by length(nombre);