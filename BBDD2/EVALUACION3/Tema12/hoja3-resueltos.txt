1.	Escribe un trigger que permita auditar las operaciones de inserción o borrado de datos que se realicen en la tabla CATEGORÍAS según las siguientes especificaciones:
	a.	Primero se deberá crear la tabla AUDITACATEGORIAS con las columnas fecha, id_categoria, tipo_operacion. 

		create table AUDITACATEGORIAS (
                  fecha date,
                  id_categoria number,
                  tipo_operacion varchar(20)); 

	b.	Cuando se produzca cualquier manipulación, se insertará una fila en dicha tabla que contendrá (en la columna correspondiente):

		create or replace trigger ejercicio1
  			before delete or insert on categorias for each row
		begin
  			if deleting then
   			 	INSERT INTO AUDITACATEGORIAS
   			 	VALUES (TO_CHAR(SYSDATE,'DD/MM/YY*HH24:MI*'), :old.id_categoria, 'BORRADO');
  			elsif inserting then
    			INSERT INTO AUDITACATEGORIAS
    			VALUES (TO_CHAR(SYSDATE,'DD/MM/YY*HH24:MI*'), :old.id_categoria, 'INSERCIÓN');
  			end if;
		end;

Fecha y hora, Id de la categoría, la operación de actualización: INSERCIÓN O BORRADO.


2.	Añadir la columna datos a la tabla AUDITACATEGORIAS, para que se pueda insertar texto.
Escribir un trigger que permita auditar las modificaciones en la tabla CATEGORIAS, según las siguientes especificaciones:

		create table auditacategorias(
                        fecha varchar(50),
                        id_categoria number,
                        opreacion varchar(20),
                        valor_anterior varchar(20),
                        datos varchar(20));

•	Cuando se produzca cualquier manipulación, se insertará una fila en dicha tabla que contendrá (en la columna correspondiente):
Fecha y hora, Id de la categoría, la operación de actualización MODIFICACIÓN, y el valor anterior y nuevo de cada columna modificada (esto último se insertará en la columna datos).

		create or replace trigger ejercicio2
     		 after update or insert or delete on categorias for each row
		begin
      		if updating then
   			 	INSERT INTO AUDITACATEGORIAS
          		VALUES (TO_CHAR(SYSDATE,'DD/MM/YY*HH24:MI*'), :old.id_categoria, 'MODIFICACION', :old.descripcion, :new.descripcion);
      		elsif inserting then
    			INSERT INTO AUDITACATEGORIAS
          		VALUES (TO_CHAR(SYSDATE,'DD/MM/YY*HH24:MI*'), :new.id_categoria, 'MODIFICACION', :new.descripcion, :new.descripcion);
      		elsif deleting then
          		INSERT INTO AUDITACATEGORIAS
          		VALUES (TO_CHAR(SYSDATE,'DD/MM/YY*HH24:MI*'), :old.id_categoria, 'MODIFICACION', :old.descripcion, :old.descripcion);
      		end if;
		end;    

		update categorias
		SET descripcion = 'hola que tal'
		WHERE id_categoria = 2; 

		rollback;

		delete from categorias where descripcion = 'Accesorios';

		insert into categorias (id_categoria, descripcion)
		values(8, 'categoria 8');

		rollback;

3.	Añade las siguientes columnas a la tabla CLIENTES: fecha_modificacion de tipo date, tipo_modificación (inserción, actualización o borrado) y modificado_por de tipo texto.
Realiza un programa que cree una secuencia llamada seq_id_cliente que empiece por el número siguiente al identificador más alto de la tabla CLIENTES y que vaya aumentando de 1 en 1.


Crea ahora un trigger de modo que, cada vez que se realice una inserción en la tabla CLIENTES se inserten en los campos fecha_modificación, tipo_modificación y modificado_por: la fecha en que se ha realizado la inserción, el tipo de modificación que es (INSERCIÓN) y el usuario de la base de datos que ha realizado dicha inserción, respectivamente, y como identificador del cliente se va a insertar el siguiente valor de la secuencia creada anteriormente.


4.	Modifica el trigger del ejercicio anterior para que haga lo siguiente:
a.	Cada  vez que se inserta una fila en la tabla CLIENTES haga lo mismo que en el ejercicio anterior.
b.	Cada vez que se modifica una fila de la tabla CLIENTES inserte la fecha de modificación, tipo de modificación (ACTUALIZACIÓN) y la persona que lo ha modificado en las columnas respectivas.
¡TENER EN CUENTA QUE EL IDENTIFICADOR DEL CLIENTE SOLO SE DEBE CAMBIAR CUANDO SE HACE UNA INSERCIÓN EN LA TABLA!


5.	Ejecuta el script poblaciones.txt que creará una nueva tabla POBLACIONES que contendrá poblaciones con códigos postales.
Ahora crea un trigger que no permita insertar clientes nuevos en la base de datos cuyo código postal no se encuentre en la tabla POBLACIONES.
